//HarmonicalEditor2D.h - VSTGUI editor file, automatically generated by VSTGUI Builder
//	--------------------------------------------------------------------------
//	Copyright (c) 2005 Niall Moody
//	
//	Permission is hereby granted, free of charge, to any person obtaining a
//	copy of this software and associated documentation files (the "Software"),
//	to deal in the Software without restriction, including without limitation
//	the rights to use, copy, modify, merge, publish, distribute, sublicense,
//	and/or sell copies of the Software, and to permit persons to whom the
//	Software is furnished to do so, subject to the following conditions:
//
//	The above copyright notice and this permission notice shall be included in
//	all copies or substantial portions of the Software.
//
//	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
//	THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
//	DEALINGS IN THE SOFTWARE.
//	--------------------------------------------------------------------------

#ifndef HARMONICALEDITOR2D_H_
#define HARMONICALEDITOR2D_H_

#ifdef WIN32
#include "vstgui_3_0_beta2/vstgui.h"
#else
#include "vstgui.h"
#endif

#include "CGraphicADSR_x.h"

class HarmonicalEditor2D : public AEffGUIEditor, public CControlListener
{
  public:
    HarmonicalEditor2D(AudioEffect *effect);
    ~HarmonicalEditor2D();
    long open(void *ptr);
    void close();

    long controlModifierClicked(CDrawContext *pContext, CControl *pControl, long button) {return 0;};

    void setParameter(long index, float value);
    void valueChanged(CDrawContext* context, CControl* control);
    void idle();

  private:
    //Controls
    COnOffButton *LFO1Reset;
    COnOffButton *LFO2Reset;
    COptionMenu *M0MSrc;
    COptionMenu *M2MSrc;
    COptionMenu *M4MSrc;
    COptionMenu *M6MSrc;
    COptionMenu *M1Val;
    COptionMenu *M3Val;
    COptionMenu *M5Val;
    COptionMenu *M7Val;
    COptionMenu *LFO1Wave;
    COptionMenu *LFO2Wave;
    COptionMenu *FiltType;
    CGraphicADSR_x *Env1;
    CGraphicADSR_x *Env2;
    CAnimKnob *M0Val;
    CAnimKnob *M2Val;
    CAnimKnob *M4Val;
    CAnimKnob *M6Val;
    CAnimKnob *M0Mod;
    CAnimKnob *M2Mod;
    CAnimKnob *M4Mod;
    CAnimKnob *M6Mod;
    CAnimKnob *Level;
    CAnimKnob *LFO1Rate;
    CAnimKnob *LFO2Rate;
    CAnimKnob *FiltCutoff;
    CAnimKnob *FiltRes;
	CAnimKnob *FiltMod;
	COptionMenu *FiltMSrc;

#ifdef PATCH_GEN
	CKickButton *GeneratePatch;
#endif

    //Bitmaps
    CBitmap *hBack;
    CBitmap *hTickBox;
    CBitmap *hBigKnob;
    CBitmap *hSmallKnob;
};

#endif
			