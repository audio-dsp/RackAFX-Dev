/*===================================================================================================
AAX_SDK_Changelog.dox

Copyright 2016-2017 by Avid Technology, Inc. 
All rights reserved.

===================================================================================================*/



/** @defgroup ChangeLog Change Log
	@ingroup AdditionalInformation
	
	@brief Changes between %AAX SDK versions
	
	\nodox
	Section names:
  \subsubsection aax_sdk_VERSION_AAXLibrary AAX Library
  \subsubsection aax_sdk_VERSION_Algorithm Algorithm
  \subsubsection aax_sdk_VERSION_Definitions Definitions
  \subsubsection aax_sdk_VERSION_DirectoryChanges Directory Changes
  \subsubsection aax_sdk_VERSION_Documentation Documentation
  \subsubsection aax_sdk_VERSION_DSP DSP
  \subsubsection aax_sdk_VERSION_ExamplePlugIns Example plug-ins
  \subsubsection aax_sdk_VERSION_Extensions Extensions
  \subsubsection aax_sdk_VERSION_Interface Interface
  \subsubsection aax_sdk_VERSION_ResolvedBugs Resolved bugs
  \subsubsection aax_sdk_VERSION_Utilities Utilities
	\endnodox

\section changelog Change Log

\subsection aax_sdk_2p3p1 AAX SDK 2.3.1
  \subsubsection aax_sdk_2p3p1_AAXLibrary AAX Library
  <UL>
    <LI>
      Enhanced support for \ref AAX_CheckedResult - added \ref AAX_CAPTURE, \ref AAX_CAPTURE_MULT, and \ref AAX_AggregateResult to assist with common Describe error handling scenarios
    </LI>
    <LI>
      Updated \ref AAX_CMonolithicParameters::StaticDescribe() to use \ref AAX_CheckedResult for error checking
    </LI>
    <LI>
      Added \ref AAX_CStatelessParameter for "momentary" parameters which do not require state, such as tap tempo buttons which can be mapped to a control surface
    </LI>
    <LI>
      Improved tolerance for unknown parameters when building or parsing plug-in settings chunk data
    </LI>
    <LI>
      Added \ref AAX_DEBUGASSERT, \ref AAX_STACKTRACE, and \ref AAX_TRACEORSTACKTRACE to the library of tracing and assertion macros in \ref AAX_Assert.h
    </LI>
    <LI>
      Fixed warnings which would prevent compilation in Visual Studio 2015 and Visual Studio 2017 when Treat Warnings As Errors is enabled
    </LI>
    <LI>
      Removed Visual Studio 2008, Visual Studio 2010, and Xcode 3 projects
    </LI>
  </UL>
    
  \subsubsection aax_sdk_2p3p1_Definitions Definitions
  <UL>
    <LI>
      Removed guard preventing \ref AAX_CPP11_SUPPORT from being set for PACE Fusion compiler builds
    </LI>
    <LI>
      Deprecated \ref AAX_EHostMode - replaced by \ref AAX_EHostModeBits
    </LI>
  </UL>
  
  \subsubsection aax_sdk_2p3p1_Documentation Documentation
  <UL>
    <LI>
      Documentation added to \ref AdditionalFeatures_CurveDisplays for the EQ Curves feature in Pro Tools 2018.1
    </LI>
    <LI>
      Added \ref describe_checking_results and \ref describe_validation sections to \ref CommonInterface_Describe
    </LI>
    <LI>
      Added \ref aax_distributing_installer section to \ref AAX_DistributingYourPlugIn, including information about bundling Track Presets with the plug-in installer
    </LI>
  </UL>
  
  \subsubsection aax_sdk_2p3p1_ExamplePlugIns Example plug-ins
  <UL>
    <LI>
      Updated all example plug-ins' Describe routines to use \ref AAX_CheckedResult for error checking
    </LI>
    <LI>
      Updated some example plug-ins' parameter registration code in \ref AAX_CEffectParameters::EffectInit() "EffectInit()" with a safer parameter creation and release style using std::unique_ptr
    </LI>
    <LI>
      Updated the \ref RectiFi example plug-in to match the current shipping version of Avid's Recti-Fi plug-in
    </LI>
    <LI>
      \ref DemoGain_UpMixer now converts arbitrarily between all stem formats, both wider and narrower
    </LI>
    <LI>
      Removed Visual Studio 2008, Visual Studio 2010, and Xcode 3 projects
    </LI>
    <LI>
      Common Xcode settings updated with "macosx10.11" base SDK and "10.9" deployment target
    </LI>
    <LI>
      Added AAX DSP for higher stem formats in \ref DemoGain_Multichannel and \ref DemoGain_UpMixer
    </LI>
  </UL>
  
  \subsubsection aax_sdk_2p3p1_Extensions Extensions
  <UL>
    <LI>
      Updated the VSTGUI extension and example plug-in to use VSTGUI 4.3
    </LI>
  </UL>
  
  \subsubsection aax_sdk_2p3p1_Interface Interface
  <UL>
    <LI>
      New interfaces:
      <UL>
         <LI>\ref AAX_IACFPageTable_V2, with methods accessed through \ref AAX_IPageTable</LI>
         <LI>\ref AAX_IACFHostServices_V3, with methods typically accessed through the macros in \ref AAX_Assert.h</LI>
      </UL>
      See \ref HostSupport for host support information
    </LI>
  </UL>
  
  \subsubsection aax_sdk_2p3p1_Utilities Utilities
  <UL>
    <LI>
      Added reference count tracing logic to AAX_CACFUnknown.cpp, which can be toggled on using the \c AAX_DEBUG_ACF_REFCOUNT macro
    </LI>
    <LI>
      Added some convenience functions to \ref AAX_PageTableUtilities.h
    </LI>
    <LI>
      Added \ref getLowestSampleRateInMask() and \ref getMaskForSampleRate() convenience functions
    </LI>
  </UL>
  
\subsection aax_sdk_2p3p0 AAX SDK 2.3.0
  \subsubsection aax_sdk_2p3p0_AAXLibrary AAX Library
  <UL>
    <LI>
      Added AAX_Exception.h with the \ref AAX::Exception namespace for %AAX-specific exception objects and the \ref AAX_CheckedResult class which can be used for throwing %AAX exceptions when an error is encountered.
    </LI>
    <LI>
      Added a try/catch block in the library implementation of \ref AAXRegisterPlugin such that exceptions may safely be thrown during Describe
    </LI>
    <LI>
      \ref AAX_ICollection now provides convenience methods to access an \ref AAX_IDescriptionHost and \ref IACFDefinition, if these interfaces are supported by the host during Describe
    </LI>
    <LI>
      \ref AAX_IComponentDescriptor now provides the generic \ref AAX_IComponentDescriptor::AddProcessProc() "AddProcessProc()" method for specifying multiple ProcessProcs at once using a property map
    </LI>
    <LI>
      \ref AAX_IController now provides methods for copying page table data from other effect variants or from arbitrary page table files on disk
    </LI>
    <LI>
      \ref AAX_IPropertyMap now supports pointer-sized properties
    </LI>
    <LI>
      \ref AAX_IPropertyMap objects can now be generated from other property map objects without requiring access to a component factory interface
    </LI>
  </UL>
  \subsubsection aax_sdk_2p3p0_Definitions Definitions
  <UL>
    <LI>
      Added a new stem format definition for the \ref AAX_eStemFormat_7_0_2 "7.0.2" format
    </LI>
    <LI>
      Removed the previous FuMa Ambisonics formats and added definitions for \ref AAX_eStemFormat_Ambi_2_ACN "second-order", and \ref AAX_eStemFormat_Ambi_3_ACN "third-order" ACN Ambisonics stems
    </LI>
    <LI>
      Added new notification types:
      <UL>
        <LI>\ref AAX_eNotificationEvent_ParameterMappingChanged</LI> (plug-in to host)
        <LI>\ref AAX_eNotificationEvent_HostModeChanged</LI> (host to plug-in)
      </UL>
    </LI>
    <LI>
      C++11 keyword compatibility macros added to AAX.h
    </LI>
    <LI>
      Removed the \c AAX_AlignedDouble definition, which was unused
    </LI>
  </UL>
  \subsubsection aax_sdk_2p3p0_Documentation Documentation
  <UL>
    <LI>
      New documentation:
      <UL>
        <LI>\ref AAX_DistributingYourPlugIn</LI>
        <LI>\ref AdditionalFeatures_CurveDisplays</LI>
        <LI>\ref digitrace__signposting</LI>
        <LI>\ref subsubsection__aax_media_composer_guide__features__presets__comparison for Media Composer</LI>
        <LI>\ref dtt_guide_04_interactive_mode for \ref DTT_Guide "DTT"
        <LI>Descriptions of \ref subsubsection__avid_ptcontrol in the \ref AAX_Page_Table_Guide</LI>
      </UL>
    </LI>
    <LI>
      There is a new process for \ref subsection__digital_signature_ "requesting the digital signing toolkit" for digitally signing %AAX plug-ins
    <LI>
      Added a PDF print-out of this Doxygen documentation to assist with text-based searches
    </LI>
    <LI>
      Updated the \ref contact section of the main page to clarify the various processes for communicating with Avid
    </LI>
    <LI>
      Updated AAX_Errors.h with a list of current internal %AAX host error values, which are useful for reference when troubleshooting host errors.
    </LI>
    <LI>
      Updated the \ref AAX_TI_Guide with information about using the latest version of Code Composer Studio with this %AAX SDK
    </LI>
  </UL>
  \subsubsection aax_sdk_2p3p0_ExamplePlugIns Example plug-ins
  <UL>
    <LI>
      Base Mac OS SDK setting in the common .xcconfig files is now macosx10.9
    </LI>
    <LI>
      DemoGain_Multichannel now includes an example of gain reduction metering
    </LI>
    <LI>
      DemoGain_Multichannel now supports \ref AAX_eStemFormat_7_0_2 "7.0.2" and \ref AAX_eStemFormat_Ambi_1_ACN "First-order", \ref AAX_eStemFormat_Ambi_2_ACN "second-order", and \ref AAX_eStemFormat_Ambi_3_ACN "third-order" Ambisonics stem formats
    </LI>
    <LI>
      DemoGain_UpMixer example plug-in added to demonstrate a width-changing effect
    </LI>
    <LI>
      The DemoMIDI_NoteOn example plug-in algorithm now supports note hold
    </LI>
  </UL>
  \subsubsection aax_sdk_2p3p0_Interface Interface
  <UL>
    <LI>
      New interfaces:
      <UL>
         <LI>\ref AAX_IACFComponentDescriptor_V3, with methods accessed through \ref AAX_IComponentDescriptor</LI>
         <LI>\ref AAX_IACFDescriptionHost, with methods accessed through \ref AAX_IDescriptionHost</LI>
         <LI>\ref AAX_IACFEffectParameters_V4, with methods accessed through \ref AAX_IEffectParameters</LI>
         <LI>\ref AAX_IACFFeatureInfo, with methods accessed through \ref AAX_IFeatureInfo</LI>
         <LI>\ref AAX_IACFPageTable, with methods accessed through \ref AAX_IPageTable</LI>
         <LI>\ref AAX_IACFPageTableController, with methods accessed through \ref AAX_IController</LI>
         <LI>\ref AAX_IACFPropertyMap_V3, with methods accessed through \ref AAX_IPropertyMap</LI>
      </UL>
      See \ref HostSupport for host support information
    </LI>
    <LI>
      Added the concept of a host "feature" which can be queried during Describe execution using \ref AAX_IDescriptionHost and \ref AAX_IFeatureInfo
    </LI>
  </UL>
  \subsubsection aax_sdk_2p3p0_ResolvedBugs Resolved bugs
  <UL>
    <LI>
      Resolved \ref AAXSDK-533: AAXLibrary compiles with warnings in VS2015 / VS2017
    </LI>
    <LI>
      Resolved \ref AAXSDK-514: Using collection-level properties leads to a leaked ACF object
    </LI>
    <LI>
      Fixed bugs with taper delegates when the minimum and maximum values are equal
    </LI>
    <LI>
      Some unnecessary headers removed or converted to forward declarations
    </LI>
  </UL>



\subsection aax_sdk_2p2p2 AAX SDK 2.2.2
  \subsubsection aax_sdk_2p2p2_AAXLibrary AAX Library
  <UL>
    <LI>Added new methods to \ref AAX_IParameter for easier conversion between logical and normalized parameter values</LI>
    <LI>Re-named \c AAX_CParameterManager::ControlIndexFromID() to \ref AAX_CParameterManager::GetParameterIndex()</LI>
    <LI>Added %AAX Library project for Visual Studio 2013</LI>
    <LI>Added warning exclusion for C4738 to 32-bit Release configuration of the %AAX Library project on Windows to fix a treat-warnings-as-errors build failure that can occur in this configuration when linking statically to the MSVC run-time libraries</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Definitions Definitions
  <UL>
    <LI>
      Added new stem format selectors for the following stem formats:
      <UL>
        <LI>The \ref AAX_eStemFormat_7_1_2 "7.1.2" speaker configuration</LI>
        <LI>\ref AAX_eStemFormat_Ambi_1_ACN "First-order", \ref AAX_eStemFormat_Ambi_2_ACN "second-order", and \ref AAX_eStemFormat_Ambi_3_ACN "third-order" Ambisonics</LI>
      </UL>
    </LI>
    <LI>Added a new notification type for information regarding the host's delay compensation state: \ref AAX_eNotificationEvent_DelayCompensationState </LI>
    <LI>Added a new \ref AAX_EDataInPortType "input data port type" property for ports which request \ref AAX_eDataInPortType_Incremental "incrementally-buffered" packet delivery</LI>
    <LI>Added a property to allow different %AAX DSP plug-in types to share the same DSP chip even if \ref AAX_eProperty_TI_MaxInstancesPerChip is declared: \ref AAX_eProperty_TI_ForceAllowChipSharing </LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Documentation Documentation
  <UL>
    <LI>Added specific details about display hardware to the \ref AAX_VENUE_Guide</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Example_plugins Example plug-ins
  <UL>
    <LI>Added the \ref DemoGain_Multichannel example plug-in</LI>
    <LI>Updated page tables of all example plug-ins</LI>
    <LI>Example plug-in Xcode projects now use C++11 and libc++ by default</LI>
    <LI>Updated \ref DemoDelay_Hybrid to fix problems with instantiation in \ref DSH_Guide "DSH" and other test hosts</LI>
    <LI>Removed multi-mono support from \ref DemoMIDI_Synth to provide a better example of a standard VI configuration</LI>
    <LI>Updated \ref RectiFi "Recti-Fi" example plug-in IDs so that they will not collide with the shipping version of Recti-Fi</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Extensions Extensions
  <UL>
    <LI>Updated \c AAX_JuceContentView::mouseMove() for compatibility with Juce version 4 and higher</LI>
    <LI>Updated \c AAX_CEffectGUI_VST for compatibility with 32-bit plug-ins when used with VSTGUI 4.2</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Interface Interface
  <UL>
    <LI>ACF interface files updated to a more recent version of the ACF SDK</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_ResolvedBugs Resolved bugs
  <UL>
    <LI>\ref AAX_CEffectParameters::UpdateParameterNormalizedValue() now increments the effect change counter only when the parameter's value actually changes</LI>
  </UL>
  \subsubsection aax_sdk_2p2p2_Utilities Utilities
  <UL>
    <LI>New utility functions: \c AAX::AsStringStemFormat(), \c AAX::AsStringStemChannel() </LI>
    <LI>Added \ref AAX_SCOPE_COMPUTE_DENORMALS() for forcing denormal float values to be calculated within a scope, rather than being treated as zero (currently implemented for Mac only)</LI>
  </UL>

\subsection aax_sdk_2p2p1 AAX SDK 2.2.1
  \subsubsection aax_sdk_2p2p1_Interface Interface
  <UL>
    <LI>
    	New interfaces:
    	<UL>
    	  <LI>\ref AAX_IACFController_V3</LI>
		</UL>
    </LI>
  </UL>
  \subsubsection aax_sdk_2p2p1_Documentation Documentation
  <UL>
    <LI>Added the \ref AAX_VENUE_Guide page</LI>
    <LI>
      Updated the \ref AAX_Page_Table_Guide
      <UL>
        <LI>Updated VENUE information: Added information about \ref subsubsection__venue_s6l and \ref subsubsection__venue_s3l and removed information about VENUE systems which do not support %AAX plug-ins</LI>
        <LI>Added information for S6, including details about the <TT>'Av46'</TT> page table type and a new section on \ref aax_page_table_guide_04_avid_center_section_page_tables_venue_s6_mapping</LI>
        <LI>Added information about quickly \ref subsection_testing_xml_resources</LI>
      </UL>
    </LI>
    <LI>Updated the documentation for \ref advancedTopics_relatedTypes, including a new section describing \ref advancedTopics_relatedTypes_deprecation</LI>
    <LI>Fixed image display problems on the \ref DSH_Guide page</LI>
    <LI>
      Added pre-built HDX DLL files to the SDK for all example plug-ins which support %AAX DSP
      \note The example plug-ins' Visual Studio projects now include a <TT>PostBuildEvent</TT> command which will copy the plug-in's HDX DLL from the project's TI/bin/Release folder to the built .aaxplugin's Resources folder.
    </LI>
    <LI>
      Additional minor example plug-in fixes
      <UL>
        <LI>Removed unnecessary build phases and framework dependencies from the plug-ins' Xcode projects</LI>
        <LI>Removed "%AAX" from the example plug-ins' display names</LI>
        <LI>Changed the guard for %AAX DSP cycle count declarations to check for the definition of the <TT>AAX_TI_BINARY_IN_DEVELOPMENT</TT> preprocessor symbol before adding cycle counts to the plug-in's description</LI>
        <LI>Added "example" to the names of all example plug-ins</LI>
      </UL>
    </LI>
  </UL>
  \subsubsection aax_sdk_2p2p1_AAX_Library AAX Library
  <UL>
    <LI>Extended \ref AAX_CParameter::GetValueAsString() and \ref AAX_CParameter::SetValueWithString() with support for all value types</LI>
    <LI>Fixed the specialization of \ref AAX_CPacket::GetPtr() for <TT>void*</TT> so that it is called when the <TT>void*</TT> version of the function template is requested</LI>
  </UL>
  \subsubsection aax_sdk_2p2p1_Definitions Definitions
  <UL>
    <LI>Added \ref AAX_ePlugInStrings_ClipNameSuffix</LI>
    <LI>Added a definition of the <TT>TI_VERSION</TT> preprocessor macro for the TI DSP compiler in AAX.h</LI>
  </UL>


\subsection aax_sdk_2p2p0 AAX SDK 2.2.0
  \subsubsection aax_sdk_2p2p0_Interface Interface
  <UL>
    <LI>
    	New interfaces:
    	<UL>
    	  <LI>\ref AAX_IACFEffectParameters_V3</LI>
		  <LI>\ref AAX_IACFHostProcessor_V2</LI>
		  <LI>\ref AAX_IACFHostProcessorDelegate_V3</LI>
		  <LI>\ref AAX_IACFHostServices_V2</LI>
		  <LI>\ref AAX_IACFViewContainer_V2</LI>
		</UL>
    </LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_Directory_changes Directory changes
  <UL>
    <LI>Moved common processing classes for the SDK example plug-ins to ExamplePlugIns/Common/ProcessingClasses</LI>
    <LI>Moved MIDI logging utilities to the Extensions folder</LI>
    <LI>Moved \ref AAX_CMonolithicParameters to the Extensions folder and removed it from the %AAX Library</LI>
  </UL>
  \subsubsection aax_sdk_2p0p0_Extensions Extensions
  <UL>
    <LI>Changed VST project to use the newest version of VSTGUI sources - VSTGUI 4.2</LI>
    <LI>Created Visual Studio 2012 projects for GUI Extensions</LI>
    <LI>
    	Fixed \ref AAX_CMonolithicParameters so that it correctly supports \ref AAX_eConstraintLocationMask_DataModel
    	\note This value is <b>required</b> for all plug-ins that share memory between their data model and algorithm callback
    </LI>
    <LI>Updated \ref AAX_CMonolithicParameters to include parameter value synchronization</LI>
    <LI>Updated \ref AAX_CMonolithicParameters to support Hybrid and include a state counter field</LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_Definitions Definitions
  <UL>
    <LI>Changed name of <TT>AAX_eProperty_StoreXMLPageTablesByType</TT> to \ref AAX_eProperty_StoreXMLPageTablesByEffect to best reflect the actual behavior of this property</LI>
    <LI>Replaced \ref AAX_EPlugInCategory_Effect category (erroneously removed in %AAX SDK 2.1)</LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_Utilities Utilities
  <UL>
    <LI>Added utilities for atomic operations and a thread-safe FIFO queue class: \ref AAX_CAtomicQueue</LI>
    <LI>Added %AAX stacktrace logging support to make plug-in debugging easier: see \ref AAX_STACKTRACE and \ref AAX_TRACEORSTACKTRACE</LI>
    <LI>Added a utility for locating the .aaxplugin bundle to provide an ability to access resources in the bundle</LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_AAX_Library AAX Library
  <UL>
    <LI>Created an %AAX Library project for Visual Studio 2012</LI>
    <LI>Created a libc++ target in the %AAX Library Xcode project</LI>
    <LI>Resolved "incompatible ms_struct" warning in Xcode 6; removed \ref AAX_ALIGN_FILE_ALG from inappropriate locations such as virtual classes that do not cross library boundaries</LI>
    <LI>Added \ref AAX_IParameterValue, an abstract value class for parameter data, and refactored \ref AAX_CParameter to use this interface</LI>
    <LI>Re-named <TT>AAX_CInstrumentParameters</TT> to \ref AAX_CMonolithicParameters (see the \ref aax_sdk_2p0p0_Extensions section for more information)</LI>
    <LI>Added an \ref AAX_CStateDisplayDelegate constructor taking <TT>std::vector<AAX_IString*></TT></LI>
    <LI>Added an \ref AAX_CParameter constructor taking \ref AAX_IString as an identifier</LI>
    <LI>Added hex conversion methods to \ref AAX_CString</LI>
    <LI>Fixed chunk size error handling in \ref AAX_CChunkDataParser</LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_Example_plugins Example plug-ins
  <UL>
    <LI>Added \ref DemoMIDI_Synth and \ref DemoMIDI_Synth_AuxOutput plug-ins</LI>
    <LI>Created Visual Studio 2012 projects for all example plug-ins</LI>
    <LI>Added EUCON page tables for all example plug-ins</LI>
    <LI>Various fixes for modifier-click event handling in example plug-ins</LI>
    <LI>Updated the example plug-in projects so that all built plug-in bundle filenames include "_Example"</LI>
    <LI>Corrected input/output property usage in HostProcessor example plug-ins</LI>
    <LI>Fixed multi-channel processing in \ref DemoDelay_HostProcessor</LI>
    <LI>Fixed a bug with dynamic processing in \ref DemoMIDI_NoteOn example plug-in</LI>
    <LI>Fixed \ref DemoGain_GUIExtensions Win32 example plug-in GUI so that it is correctly displayed in Windows 8</LI>
  </UL>
  \subsubsection aax_sdk_2p2p0_Documentation Documentation
  <UL>
    <LI>Added \ref AAX_Media_Composer_Guide</LI>
    <LI>Updated \ref HostSupport documentation for latest %AAX host versions</LI>
    <LI>
    	Updated the \ref AAX_Page_Table_Guide
    	<UL>
    		<LI>Updated \ref aax_page_table_guide__eucon_page_tables documentation</LI>
    		<LI>Updated \ref aax_page_table_guide_04_avid_center_section_page_tables documentation with tables mapping the EQ, Comp/Lim, and Exp/Gate table indices to their respective functions</LI>
    	</UL>
    </LI>
    <LI>Updated \ref AAX_EMIDINodeType "MIDI node" documentation</LI>
    <LI>Added new documentation pages for \ref advancedTopics_parameterUpdateTiming and \ref advancedTopics_ParameterAutomation</LI>
    <LI>Improved \ref subsection__presets_and_settings_management documentation</LI>
    <LI>Documented the \ref subsubsection__plugin_configuration_cacheing_ "plug-in caching" behavior in Pro Tools</LI>
    <LI>Added documentation for optimizing an %AAX DSP plug-in by using a hard-coded buffer size in the algorithm callback/ See the \ref subsection__refactoring_conditionals_and_branches section of the \ref AAX_TI_Guide</LI>
  </UL>

\subsection aax_sdk_2p1p1 AAX SDK 2.1.1
  \subsubsection aax_sdk_2p1p1_Definitions Definitions
  <UL>
    <LI>Explicitly removed support for the SDK's C99Compatibility headers in Microsoft Visual C++ 10.0 and later</LI>
  </UL>
  \subsubsection aax_sdk_2p1p1_DSP DSP
  <UL>
    <LI>Added support and documentation for compiling %AAX DSP plug-ins using Code Composer Studio 5</LI>
    <LI>Updated all example plug-in projects for use with Code Composer Studio 5</LI>
  </UL>
  \subsubsection aax_sdk_2p1p1_Documentation Documentation
  <UL>
    <LI>Extended the \ref advancedTopics_ParameterUpdates "parameter update documentation pages" with sequence diagrams and further information about linked parameter behavior</LI>
    <LI>Added guides for \ref AAX_DigiTrace_Guide "DigiTrace" and \ref DSH_Guide "DSH"</LI>
    <LI>Added a reference list of \ref aax_interfacelist "AAX interfaces"</LI>
  </UL>

\subsection aax_sdk_2p1p0 AAX SDK 2.1.0
  \subsubsection aax_sdk_2p1p0_Interface Interface
  <UL>
    <LI>New method added to \ref AAX_IACFTransport_V2 : \ref AAX_IACFTransport_V2::IsMetronomeEnabled() "IsMetronomeEnabled()"</LI>
  </UL>
  \subsubsection aax_sdk_2p1p0_AAXLibrary AAX Library
  <UL>
    <LI>New methods in AAX_CString for direct copy from, assignment to, and comparison with std::string </LI>
    <LI>Fixed many implicit sign conversions </LI>
    <LI>Added \c const qualification to some AAX_C... methods </LI>
    <LI>Updated \ref AAX_IParameter::GetValueAsString() to take a pointer-to \ref AAX_IString (was lvalue ref) </LI>
    <LI>Fixed a bug in \ref AAX_CEffectParameters::GetParameterNameOfLength(); the method now correctly truncates a parameter name if the requested length is shorter than the shortest available abbreviated name </LI>
    <LI>Treat Warnings As Errors enabled in %AAX Library projects </LI>
    <LI>clang pragmas added to avoid warnings for non-virtual destructors in ACF interface classes (cf. Microsoft COM) </LI>
    <LI>Xcode 3 project added for the %AAX Library </LI>
  </UL>
  \subsubsection aax_sdk_2p1p0_Definitions Definitions
  <UL>
    <LI>Alignment of \ref AAX_CMidiPacket and \ref AAX_CMidiStream on 32-bit OS X is now explicitly set using <TT>\#pragma options align=power</TT> to maintain backwards-compatibility with earlier versions of Pro Tools
    <LI>New property added: \ref AAX_eProperty_RequiresChunkCallsOnMainThread </LI>
    <LI>New property added: \ref AAX_eProperty_Constraint_AlwaysProcess </LI>
    <LI>Converted \c AAX_eProperty_Related_Plugin_List (property #22) to dedicated \ref AAX_eProperty_Related_DSP_Plugin_List "DSP" and \ref AAX_eProperty_Related_Native_Plugin_List "Native" versions
    <LI>Re-named AAX_eProperty_AudioBufferLength to \ref AAX_eProperty_DSP_AudioBufferLength
    <LI>Added new \ref AAX_ECurveType selector: \ref AAX_eCurveType_Reduction </LI>
    <LI>Added various new selectors to \ref AAX_ENotificationEvent </LI>
    <LI>Updated \ref AAX_STEM_FORMAT macros to allow negative index values </LI>
    <LI>Added new error codes to \ref AAX_EError
  </UL>
  \subsubsection aax_sdk_2p1p0_Utilities Utilities
  <UL>
    <LI>New utility functions: \c AAX::IsAvidNotification(), \c AAX_IsASCII(), \c AAX_AsStringFourChar() </LI>
    <LI>AAX_ASSERT and AAX_TRACE now require a trailing semicolon </LI>
    <LI>Re-named \c LIMIT to \ref AAX_LIMIT </LI>
    <LI>Removed unused extended-80 conversion utilities </LI>
  </UL>
  \subsubsection aax_sdk_2p1p0_Extensions Extensions
  <UL>
    <LI>Resolved issue in which VSTGUI v4 key events were not received on Windows </LI>
    <LI>Xcode 3 projects added for the Juce and VSTGUI extension libraries </LI>
  </UL>
  \subsubsection aax_sdk_2p1p0_Documentation Documentation
  <UL>
    <LI>.pdf documentation moved to Doxygen </LI>
    <LI>Added several new sample plug-ins </LI>
    <LI>Expanded documentation for Host Processor and %AAX Hybrid </LI>
  </UL>
  


\subsection aax_sdk_2p0p1 AAX SDK 2.0.1

\subsection aax_sdk_2p0p0 AAX SDK 2.0.0
  \subsubsection aax_sdk_2p0p0_aax AAX Library
  <UL>
    <LI>Added support for the %AAX Hybrid processing architecture</LI>
    <LI>Added methods for better access to global MIDI data from \ref AAX_IEffectParameters </LI>
    <LI>Extended the \ref AAX_ITransport interface with several new methods</LI>
    <LI>Host Processor plug-ins can now trigger an analysis pass programmatically </LI>
  </UL>
  \subsubsection aax_sdk_2p0p0_Definitions Definitions
  <UL>
    <LI>Added new selectors to \ref AAX_ENotificationEvent for state information during AudioSuite, bounce, and restore events </LI>
    <LI>AudioSuite reverb and delay plug-ins may opt out of the "Reverse" processing mode
  </UL>
  \subsubsection aax_sdk_2p0p0_Algorithm Algorithm
  <UL>
    <LI>Support for temporary algorithm data blocks</LI>
  </UL>

\subsection aax_sdk_1p5p0 AAX SDK 1.5.0
  \subsubsection aax_sdk_1p5p0_AAXLibrary AAX Library
  <UL>
    <LI>Plug-ins now receive a different notification when receiving chunks from session and preset loads</LI>
    <LI>Aux output stems now support up to 256 output channels</LI>
    <LI>Added alpha versions of V2 interfaces</LI>
    <LI>Added projects for Visual Studio 2005 and 2008</LI>
  </UL>


\subsection aax_sdk_1p0p6 AAX SDK 1.0.6
  \subsubsection aax_sdk_1p0p6_Documentation Documentation
  <UL>
    <LI>64-bit targets enabled for the %AAX Library and sample plug-ins</LI>
  </UL>

  \subsubsection aax_sdk_1p0p6_AAXLibrary AAX Library
  <UL>
    <LI>Changed scope of some methods in AAX_CEffectParameters and AAX_CEffectGUI</LI>
    <LI>New 8 byte structure alignment added to AAX.h</LI>
    <LI>Changed the scope of some chunk parser items</LI>
    <LI>Clock context field is set to be synchronized across multiple plug-in instances</LI>
    <LI>Support for multiple input MIDI nodes</LI>
    <LI>Support for multiple named Aux Outputs (AAX_CInstrumentParameters)</LI>
    <LI>Instrument parameters no longer uses host generated GUI by default</LI>
  </UL>

  \subsubsection aax_sdk_1p0p6_DSP DSP
  <UL>
    <LI>Algorithm initialization routine now has 5 seconds to execute</LI>
  </UL>


\subsection aax_sdk_1p0p5 AAX SDK 1.0.5
  \subsubsection aax_sdk_1p0p5_DirectoryChanges Directory Changes
  <UL>
    <LI>Removed 3 files in /ExamplePlugIns/Common</LI>
    <LI>Added AAX_UtilsNative.h and AAX_Version.h</LI>
    <LI>Moved AAXLog(), AAXLogf(), and isParameterIDEqual() to AAX_UtilsNative.h</LI>
  </UL>

  \subsubsection aax_sdk_1p0p5_Documentation Documentation
  <UL>
    <LI>Fixed instance tracking bugs in DemoGain_BackGround</LI>
    <LI>Added a time-stamp parameter to DemoMIDI_NoteOn</LI>
    <LI>Added MIDI-through to DemoMIDI_NoteOn</LI>
    <LI>Added DemoGain_DMA sample plug-in</LI>
  </UL>

  \subsubsection aax_sdk_1p0p5_AAXLibrary AAX Library
  <UL>
    <LI>Changed scope of some methods in AAX_CEffectParameters</LI>
    <LI>Set default number of steps in AAX_CParameter.h to non-zero</LI>
    <LI>Renamed enum AAX_EConstraintLocation to AAX_EConstraintLocationMask</LI>
  </UL>

  \subsubsection aax_sdk_1p0p5_DSP DSP
  <UL>
    <LI>Larger buffer size allowed on TI</LI>
    <LI>Support for DLL chip affinity in Pro Tools 10.2 and higher</LI>
    <LI>New AAX_INT_LO and AAX_INT_HI utilities defined</LI>
  </UL>


\subsection aax_sdk_1p0p4 AAX SDK 1.0.4

  \subsubsection aax_sdk_1p0p4_Describe Describe
  <UL>
    <LI>Multi-mono support constraint property added
      <UL>
      <LI>Will be supported in DAE versions 10.2 and higher</LI>
      </UL></LI>
  </UL>
  
  \subsubsection aax_sdk_1p0p4_AAXLibrary AAX Library
  <UL>
    <LI>AAX_CInstrumentParameters class added as helper for monolithic instruments</LI>
    <LI>AAX_CTimestamp type changed to signed 64-bit integer</LI>
    <LI>Maximum string length support added to binary display delegate</LI>
  </UL>
  
  \subsubsection aax_sdk_1p0p4_Documentation Documentation
  <UL>
    <LI>Resolved several DemoGain_GUIExtensions example plug-in bugs and improved
    parity with expected Pro Tools plug-in GUI features</LI>
    <LI>Added DemoMIDI_Sampler example plug-in</LI>
    <LI>Added /TI/SignalProcessing directory with example signal processing utilities</LI>
    <LI>Added new "AAX for Pro Tools" document (still in progress)</LI>
  </UL>
  

\subsection aax_sdk_1p0p3 AAX SDK 1.0.3

  \subsubsection aax_sdk_1p0p3_Describe Describe
  <UL>
    <LI>Added "deprecated type" feature for swapping in new Effect types</LI>
    <LI>Removed AAX_eProperty_TI_UncachedCycleCount</LI>
    <LI>Removed AAX_eProperty_UseSmallPreviewBuffer, as this property is now mandatory</LI>
  </UL>

  \subsubsection aax_sdk_1p0p3_Algorithm Algorithm
  <UL>
    <LI>Established 1024 as the maximum expected audio buffer length for any %AAX plug-in</LI>
    <LI>Created new instance initialization action flag for instance reset events</LI>
  </UL>

  \subsubsection aax_sdk_1p0p3_AAXLibrary AAX Library
  <UL>
    <LI>Fixed reference-counting bug in AAXRegisterPlugin()</LI>
  </UL>
  
  \subsubsection aax_sdk_1p0p3_DSP DSP
  <UL>
    <LI>Extra software pipeline information added to CCS asm output by default</LI>
    <LI>External memory support added to default CommonPlugIn_LinkerCmd.cmd file
      <UL>
      <LI>ExtendedPlugIn_LinkerCmd.cmd is now deprecated</LI>
      </UL></LI>
  </UL>

  \subsubsection aax_sdk_1p0p3_Utilities Utilities
  <UL>
    <LI>DigiTrace facility for AAX_Assert changed from DTF_TIPLUGINS to DTF_AAXPLUGINS</LI>
    <LI>Added example DTT script for signal cancellation testing to Development builds</LI>
    <LI>Added DSP information tooltip feature to plug-in window header in Pro Tools</LI>
  </UL>

  \subsubsection aax_sdk_1p0p3_Documentation Documentation
  <UL>
    <LI>Win32 GUI example plug-in added to the SDK</LI>
    <LI>Basic coefficient smoothing example plug-in added to SDK</LI>
    <LI>Side Chain and Auxiliary Output Stem information page added to Doxygen</LI>
    <LI>Resolved SetControlHighlightInfo() naming inconsistency in sample plug-ins</LI>
    <LI>Expanded GUI information in %AAX Manual</LI>
  </UL>


\subsection aax_sdk_1p0p2 AAX SDK 1.0.2

  \subsubsection aax_sdk_1p0p2_AAXLibrary AAX Library
  <UL>
    <LI>Moved %AAX Library source to /Libs directory</LI>
    <LI>Added complete library source code and project files</LI>
    <LI>Removed pre-compiled %AAX library binaries  </LI>
  </UL>

  \subsubsection aax_sdk_1p0p2_Documentation Documentation
  <UL>
    <LI>Added correct mouse event handling logic to DemoGain_GUIExtensions plug-ins</LI>
    <LI>Added meters to DemoGain_Cocoa</LI>
    <LI>New TI optimization case studies added to the TI Guide document</LI>
  </UL>

  \subsubsection aax_sdk_1p0p2_ResolvedBugs Resolved bugs
  <UL>
    <LI>PTSW-149745</LI>
      <UL>
      <LI>Loading code into external DSP memory is functional as of TI Shell build
        10.1x828</LI>
      </UL></LI>
  </UL>


 */
